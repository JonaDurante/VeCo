// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VeCo.DataBase;

#nullable disable

namespace VeCo.Migrations
{
    [DbContext(typeof(VecoContext))]
    [Migration("20221029185109_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FavoritosProductos", b =>
                {
                    b.Property<int>("FavoritosId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductosId")
                        .HasColumnType("integer");

                    b.HasKey("FavoritosId", "ProductosId");

                    b.HasIndex("ProductosId");

                    b.ToTable("FavoritosProductos");
                });

            modelBuilder.Entity("FavoritosUsuarios", b =>
                {
                    b.Property<int>("FavoritosId")
                        .HasColumnType("integer");

                    b.Property<int>("UsuariosId")
                        .HasColumnType("integer");

                    b.HasKey("FavoritosId", "UsuariosId");

                    b.HasIndex("UsuariosId");

                    b.ToTable("FavoritosUsuarios");
                });

            modelBuilder.Entity("VeCo.Clases.DetalleProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripción")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("IdProducto")
                        .HasColumnType("integer");

                    b.Property<int>("Likes")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("DetalleProducto");
                });

            modelBuilder.Entity("VeCo.Clases.Dolares", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DolarBCRA")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DolarBancoNacion")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DolarBlue")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DolarMayorista")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DolarMinorista")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DolarOficial")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Dolares");
                });

            modelBuilder.Entity("VeCo.Clases.Favoritos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Favoritos");
                });

            modelBuilder.Entity("VeCo.Clases.Precio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecioUnidad")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Precio");
                });

            modelBuilder.Entity("VeCo.Clases.Productos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("IdDetalleProducto")
                        .HasColumnType("integer");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("Stock")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("VeCo.Clases.Roles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("NivelPermiso")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("VeCo.Clases.Usuarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RolesId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("FavoritosProductos", b =>
                {
                    b.HasOne("VeCo.Clases.Favoritos", null)
                        .WithMany()
                        .HasForeignKey("FavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeCo.Clases.Productos", null)
                        .WithMany()
                        .HasForeignKey("ProductosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FavoritosUsuarios", b =>
                {
                    b.HasOne("VeCo.Clases.Favoritos", null)
                        .WithMany()
                        .HasForeignKey("FavoritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VeCo.Clases.Usuarios", null)
                        .WithMany()
                        .HasForeignKey("UsuariosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VeCo.Clases.Usuarios", b =>
                {
                    b.HasOne("VeCo.Clases.Roles", "Roles")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("VeCo.Clases.Roles", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
